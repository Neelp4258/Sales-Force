version: '3.8'

services:
  # Django Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ambivare_web
    command: gunicorn ambivare_erp.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4 --worker-class gthread --timeout 300 --max-requests 1000 --max-requests-jitter 50
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=ambivare_erp.settings
    depends_on:
      - redis
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ambivare_celery_worker
    command: celery -A ambivare_erp worker -l info --concurrency=4 --max-tasks-per-child=50
    volumes:
      - media_volume:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - redis
      - web
    restart: always
    networks:
      - app_network

  # Celery Beat
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ambivare_celery_beat
    command: celery -A ambivare_erp beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      - redis
      - web
    restart: always
    networks:
      - app_network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: ambivare_redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: ambivare_nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  static_volume:
  media_volume:
  redis_data:

networks:
  app_network:
    driver: bridge